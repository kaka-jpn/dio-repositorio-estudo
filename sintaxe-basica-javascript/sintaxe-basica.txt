tipagem
    a tipagem funciona como uma regra de uso de dados, quanto mais forte for a tipagem, mais obrigatório é a declaração do tipo de dado

var numero = 1;
// o javascript já converte o valor 1 para o tipo Number

tipos primitivos
as variaveis em javascript podem guardar tipos de dados que chamamos de tipos primitivos

variaveis podem guardar valores dos tipos: Boolean;null;undefined;Number;String;Array;Object;Function

declaração de variaveis
var - escopo global e local, pode ter seu valor alterado, se não tiver um valor inicial será tratado como null
let - escopo local de bloco, pode ter seu valor alterado, se não tiver um valor inicial será tratado como null
const - escopo local de bloco, somente leitura, o valor inicial obrigatório e não pode ser alterado

Escopo
o escopo em javascript define a limitação e visibilidade de um bloco de código

escopo global - quando a variável e declarada fora de qualquer bloco, sua visibilidade fica disponível em todo o código
escopo local - quando a variável é declarada dentro de um bloco, sua visibilidade pode ficar disponível ou não


Vetores
Arrays são um tipo de lista, ou matriz e variaveis, onde cada variaveis possui um índice. Os valores podem ser de vários tipos

Array
O array deve ser declarado entre "[]", e podem guardar qualquer valor dentro de seus índices

Manipulando Arrays
forEach() - itera um array
push() - add item no final do array
pop() - remove item no final do array
shift() - remove item no início do array
unshift() - add item no início do array
indexOf() - retornao índice de um valor
splice() - remove ou substitui um item pelo índice
slice() - retorna uma parte de um array existente

Objetos
Dados que possuem propriedades e valores que definem suas características. Deve ser declarado entre chaves "{}"


Estruturas condicionais
São instruções para realizar determinadas tarefas a partir de uma condição, seja de decisão ou repetição

if 
Para estabelecer uma condição

else 
No caso de a condição não ser atendida podemos usar o "else"

else if
Caso haja mais de uma condição usamos o "else if"

ninho de if
Podemos também usar o "if" dentro de um outro "if", chamamos isso de ninhos de if's

if ternário
Podemos também fazer uma verificação em uma única linha usando "if" ternário

Swicth/case 
O Swicth/case funciona como uma estrutura condicional


Estrutura de repetição

    Laços de repetição
    For;
    For/in;
    For/of;
    While;
    Do/while;

For 
Funciona como uma repetição de instrução até que a condição seja falsa

For/in
Funciona como uma repetição a partir de uma propriedade 

For/of
Funciona como uma repetição a partir de uma valor
O For/of não funciona com objetos pois a propriedades variam, diferentes do índice em um array que sempre serão números inteiros

while
Executa uma instrução "enquanto" determinada condição for verdadeira, a verificação e feita antes da execução

Do/While
Executa uma instrução "até que" determinada condição seja falsa, a verificação é feita depois da execução


Função Declarativas
São funções que possuem o uso mais comum, deve ser declarada usado a palavra reservado "function" seguida do nome da função, parênteses e chaves

Ex:
function noemDaFuncao(){
${instrucao};
}

Expressões de funções
São funções atribuidas à expressões. A nomeação das funções por expressão é opcional

Ex:
var funcao = function nomeDaFuncao(){
${instrucao};
}


Arrow Function
São funções de expressão de sintaxe curta. Arrow functions sempre serão an^nimas, e portanto não podem ser nomeadas.
Devem ser declarada com parênteses "()", seguido de "=>" e depois chaves "{}"

Ex:
var funcao = () => {
${instrucao};
}

Funções Aritméticas

Number() - converter valores em números
Prompt() - para registrat entradas de usuários;
Alert() - para mostrar mensagem ao usuário;
Template Strings - para usar strings junto com expressões;




















